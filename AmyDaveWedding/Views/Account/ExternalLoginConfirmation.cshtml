@model AmyDaveWedding.Models.ExternalLoginConfirmationViewModel
@{
    Layout = "~/Views/Account/_AccountLayout.cshtml";
    ViewBag.Title = "Register";
}

<h2>Register</h2>
<p class="text-info">
    You've successfully authenticated using <strong>@ViewBag.LoginProvider</strong>.
</p>
<hr />

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl, LoginProvider = ViewBag.LoginProvider }, FormMethod.Post, new { id = "ext-conf-form", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.InviteeId)

    @Html.ValidationSummary(true)
    
    //var errors = Html.ValidationSummary(true);
    //var state = Html.ViewData.ModelState;
    //var valid = Html.ViewData.ModelState.IsValid;

    if (ViewBag.MatchingInvitees != null && ViewBag.MatchingInvitees.Count > 0)
    {
        @Html.HiddenFor(m => m.UserName)
        @Html.HiddenFor(m => m.Name)
        @Html.HiddenFor(m => m.Email)
        @Html.HiddenFor(m => m.ZipCode)
        <div class="select-invitee">
            <div class="form-group who-are-you">
                @if (ViewBag.MatchingInvitees.Count == 1)
                {
                    <div class="col-xs-12">We found a match. Is this you?</div>
                }
                else
                {
                    <div class="col-xs-12">We found multiple matches. Which one are you?</div>
                }
            </div>
            <div class="form-group invitee-list">
                <div class="col-xs-11 col-sm-6 col-md-5 col-lg-4">
                    <ul class="list-group">
                        @foreach (var invitee in ViewBag.MatchingInvitees)
                        {
                            <li class="list-group-item">
                                <span>@invitee.Name</span>
                                <a class="btn btn-primary btn-sm pull-right" data-invitee-id="@invitee.Id">
                                    <i class="fa fa-check"></i> This is me
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            @*<div class="form-group">
                <div class="col-xs-12">
                    <input type="submit" class="btn btn-success" value="Register" />
                </div>
            </div>*@
        </div>
    }
    else
    {
        <div class="user-info">
            <p>
                Please provide some additional info to verify that you're on our wedding list.
                Use the zip code that we sent your invitation to.
            </p>

            @if (Html.ViewData.ModelState.IsValidField("UserName"))
            {
                @Html.HiddenFor(m => m.UserName)
            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Name)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ZipCode, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ZipCode)
                </div>
            </div>
            @if (!Html.ViewData.ModelState.IsValid)
            {
                <div class="form-group">
                    <p class="col-md-offset-2 col-md-10">
                        If you're having difficulty logging in, please contact Dave or Amy and we'll get you setup.
                    </p>
                </div>
            }
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-success" value="Register" />
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
